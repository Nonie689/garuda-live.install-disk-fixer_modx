#!/usr/bin/bash

trap 'exit 130' INT
PID=$(ps -ef | grep -E "waysudo $1" | grep -v grep | head --lines=-1 | awk '{print $2}')
main_programm="$1"

function xhost_run {
      xhost +si:localuser:root &> /dev/null 

      if test $(su -c "$@")
      then
         xhost -si:localuser:root &> /dev/null 
         succeed
      else
         xhost -si:localuser:root &> /dev/null
         sudo rm -rf ~/.cache/waysudo.$PID &> /dev/null
         fatal
      fi
}

function sudo-env_run {
      sudo -E "$@" 2> ~/.cache/waysudo.$PID && succeed
}

function sudo_xhost-env_run {
      xhost +si:localuser:root &> /dev/null 
      if test $(sudo -E "$@")
      then
         xhost -si:localuser:root &> /dev/null 
         succeed
      else
         xhost -si:localuser:root &> /dev/null
         false
      fi
}

function succeed {
     echo "Waysudo execution finished with no fails!"
     echo
     sudo rm -rf ~/.cache/waysudo.$PID &> /dev/null
     exit 0
}

function qt_warn {
     echo
     echo "No Qt platform plugin could be initialized!"
     echo
     echo "Trying running the command via xhost fallback variant!"
}

function x11_warn {
     echo
     echo "No X11 display is set!"
     echo
}

function fatal {
     echo
     echo "Waysudo execution can't fix your execution problem!"
     echo
     echo -e "Please contact the developer, of $programm_main\n Ask to fix the sudo execution in Wayland-based Desktop's!!"
     echo
     sudo rm -rf ~/.cache/waysudo.$PID &> /dev/null
     exit 1
}

function not_found {
   printf "\nCommand $main_programm is not found!\n\n"
   exit 1
}

#######################################################
#####  Source is for bash source process!!  #####
##################################################

export QT_QPA_PLATFORMTHEME="qt5ct"
export QT_QPA_PLATFORM="wayland;xcb"
export WAYLAND_DISPLAY="$(find $XDG_RUNTIME_DIR/wayland-*|grep -v '.lock')"

which xhost &>/dev/null || bash -c "echo  Please intall xorg-xhost! && exit 1"

if [[ -z $main_programm ]] 
then
   echo "No programm found to run with waysudo!"
   echo
   exit 1
fi


which $main_programm &> /dev/null || not_found


echo
echo Waysudo PID: $PID 
echo



if test $(which sudo &> /dev/null)
then
  printf  "No sudo are installed.\n\nIf you want a better runtime perfomance you should install sudo!\n\nFallback to using slower xhost localuser method!\n"
  xhost_run $@
fi

sudo-env_run "$@"
cat  ~/.cache/waysudo.$PID | grep -E "Qt" &> /dev/null && qt_warn
cat  ~/.cache/waysudo.$PID | grep -E "cannot open display:" &> /dev/null && x11_warn 
sudo_xhost-env_run "$@" || xhost_run "$@"


